library(TCGAbiolinks)
library(dplyr)
getwd()
load("~/GitHub/Rstudy_omics_lec/rootr/.RData")
getwd()
getwd()
setwd("./GitHub/Rstudy_omics_lec/rootr")
getwd()
getwd()
getwd()
library(TCGAbiolinks)
library(dpylr)
library(DT)
query <- GDCquery(
project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical Supplments",
data.format = "BCR Biotab",
file.type = "patient"
)
GDCdownload(query)
getwd()
library(TCGAbiolinks)
library(dplyr)
library(DT)
query <- GDCquery(
project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical Supplment",
data.format = "BCR Biotab",
file.type = "patient"
)
library(TCGAbiolinks)
library(dplyr)
library(DT)
query <- GDCquery(
project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = "BCR Biotab",
file.type = "patient"
)
View(clinical.BCRtab.all)
GDCdownload(query)
View(query)
View(query)
View(query)
View(query[[1]][[1]])
clinical.BCRtab.patient <- GDCprepare(query)
View(query)
clinical.BCRtab.all$clinical_drug_prad %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
clinical.BCRtab.patient %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
# Make Datatable(using DT library package) and also see on viewer
clinical.BCRtab.all$clinical_patient_prad %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
View(clinical.BCRtab.all)
View(clinical.BCRtab.patient)
View(clinical.BCRtab.patient[["clinical_patient_prad"]])
# Part_01_02-noname.R
library(TCGAbiolinks)
query <- GDCquery(
project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = "BCR Biotab"
)
GDCdownload(query)
clinical.BCRtab.all <- GDCprepare(query)
# All available tables
names(clinical.BCRtab.all)
View(clinical.BCRtab.all)
View(clinical.BCRtab.patient)
View(clinical.BCRtab.all[["clinical_patient_prad"]])
# column names from clinical_patient_prad
# tibble:: / import tibble packages
# tibble::tibble / construct a dataframe
# sort by colnames in clinical_patient_prad of clincal.BCRtab.all
tibble::tibble(sort(colnames(clinical.BCRtab.all$clinical_patient_prad)))
# package(plyr):
# plyr::
plyr::count(clinical.BCRtab.all$clinical_patient_prad$gleason_score)
gls.cols <- grep("^gleason", colnames(clinical.BCRtab.all$clinical_patient_prad))
clinical.BCRtab.all$clinical_patient_prad[,c(2,gls.cols)] %>%
DT::datatable(options = list(scrollX = TRUE))
clinical.BCRtab.all$clinical_patient_prad %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
# Clinical indexed data
clincal <- GDCquery(project = "TCGA-PRAD", type = "clinical")
# Clinical indexed data
clincal <- GDCquery(project = "TCGA-PRAD", type = "Clinical")
# Clinical indexed data
clincal <- GDCquery(project = "TCGA-PRAD", type = "clinical")
# Clinical indexed data
clincal <- GDCquery(project = "TCGA-LUAD", type = "clinical")
# Clinical indexed data
clincal <- GDCprepare_clinic(project = "TCGA-PRAD", type = "clinical")
# Clinical indexed data
clincal <- GDCquery_clinic(project = "TCGA-PRAD", type = "clincal")
# Clinical indexed data
clincal <- GDCquery_clinic(project = "TCGA-PRAD", type = "clincal")
# Clinical indexed data
clincal <- GDCquery_clinic(project = "TCGA-PRAD", type = "clincal")
# Clinical indexed data
clincal <- GDCquery_clinic(project = "TCGA-PRAD", type = "clinical")
clincal %>%
head %>%
DT::datatable(filter = 'top',
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
# Legacy Clincal data (Biotab Format)
query <- GDCquery(project = "TCGA-PRAD",
data.category = "Clincal",
data.type = "Clincal data",
legacy = TRUE,
file.type = "txt")
query <- GDCquery(project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical data",
legacy = TRUE,
file.type = "txt")
query %>%
getResults %>%
select(-matches("cases")) %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
GDCdownload(query)
clinical.biotab <- GDCprepare(query)
# Get all names in data
names(clinical.biotab)
# DT
datatable(clinical.biotab$clinical_radiation_prad, options = list(scrollX = TRUE, keys = TRUE))
# ---
# Filter functions
TCGAquery_SampleTypes()
View(clincal)
# ---
# Filter functions
names(clincal)
clinical[70]
View(clincal)
clinical <- GDCquery_clinic(project = "TCGA-PRAD", type = "clinical")
clinical %>%
head %>%
DT::datatable(filter = 'top',
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
View(clincal)
View(clincal)
rm(clincal)
clinical[70]
clinical[70][1:5]
clinical[70][1]
# ---
# Filter functions
# function:TCGAquery_SampleTypes; filter samples by barcode
# names(clinical); 70th column 'bcr_patient_barcode'
bar <- clinical[70]
S <- TCGAquery_SampleTypes(bar, "TP")
S2 <- TCGAquery_SampleTypes(bar, "NB")
View(S)
View(S2)
View(bar)
# ---
# Filter functions
# function:TCGAquery_SampleTypes; filter samples by barcode
# names(clinical); 70th column 'bcr_patient_barcode'
bar <- c(clinical[70])
S <- TCGAquery_SampleTypes(bar, "TP")
# ---
# Filter functions
# function:TCGAquery_SampleTypes; filter samples by barcode
# names(clinical); 70th column 'bcr_patient_barcode'
bar <- (clinical[70]
# ---
# Filter functions
# function:TCGAquery_SampleTypes; filter samples by barcode
# names(clinical); 70th column 'bcr_patient_barcode'
bar <- clinical[70]
# ---
# Filter functions
# function:TCGAquery_SampleTypes; filter samples by barcode
# names(clinical); 70th column 'bcr_patient_barcode'
bar <- clinical[70]
bar <- clinical[70]
View(bar)
names(bar)
View(bar)
S <- TCGAquery_SampleTypes(bar, "TM")
View(bar)
View(clinical.BCRtab.patient)
View(clinical.biotab)
View(bar)
View(query)
rm(s, s2)
rm(s)
rm(S, S2)
clinical.BCRtab.all$clinical_patient_prad %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
clinical <- GDCquery_clinic(project = "TCGA-PRAD", type = "clinical")
clinical %>%
head %>%
DT::datatable(filter = 'top',
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
query <- GDCquery(project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical data",
legacy = TRUE,
file.type = "txt")
# DT, query that match 'cases'
query %>%
getResults %>%
select(-matches("cases")) %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
query <- GDCquery(project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical data",
legacy = TRUE,
file.type = "txt")
# DT, query that match 'cases'
query %>%
getResults %>%
select(-matches("cases")) %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
query <- GDCquery(project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical data",
#legacy = TRUE,
file.type = "txt")
# query that match with GDC query (arguments)
query <- GDCquery(
project = "TCGA-PRAD",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = "BCR Biotab",
file.type = "drug"
)
# GDCdownload function
# download matched query data in GDCdata folder in current dir
GDCdownload(query)
# Object named 'clincal.BCRtab.patient' override with query data
# using GDCprepare function
clinical.BCRtab.drug <- GDCprepare(query)
View(clinical.BCRtab.drug)
# Make Datatable(using DT library package) and also see on viewer
clinical.BCRtab.all$clinical_drug_prad %>%
head %>%
DT::datatable(options = list(scrollX = TRUE, keys = TRUE))
View(clinical.BCRtab.drug)
View(clinical.BCRtab.drug[["clinical_drug_prad"]])
rm(bar, clinical)
rm(greb("^clinical"))
rm(^clinical.BCRtab.all)
rm(clincal.BCRtab.all)
rm(clinical.BCRtab.all, clinical.BCRtab.drug, clinical.BCRtab.patient)
rm(clinical.biotab, query, gls.cols)
